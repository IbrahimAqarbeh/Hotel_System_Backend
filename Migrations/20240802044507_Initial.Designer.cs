// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using hotel_system_backend.Models;

#nullable disable

namespace hotel_system_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240802044507_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("AuthorityId_seq", "public")
                .StartsAt(1000L);

            modelBuilder.HasSequence("BusinessDayId_seq", "public")
                .StartsAt(1000L);

            modelBuilder.HasSequence("DeletedTransactionId_seq", "public")
                .StartsAt(1000L);

            modelBuilder.HasSequence("GuestId_seq", "public")
                .StartsAt(1000L);

            modelBuilder.HasSequence("RecordNumber_seq", "public")
                .StartsAt(1000L);

            modelBuilder.HasSequence("ReservationNumber_seq", "public")
                .StartsAt(1000L);

            modelBuilder.HasSequence("TransactionId_seq", "public")
                .StartsAt(1000L);

            modelBuilder.HasSequence("UserID_seq", "public")
                .StartsAt(1000L);

            modelBuilder.Entity("hotel_system_backend.Models.Authorities", b =>
                {
                    b.Property<long>("AuthorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("nextval('\"AuthorityId_seq\"')");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AuthorityId");

                    b.ToTable("Authorities");
                });

            modelBuilder.Entity("hotel_system_backend.Models.BusinessDay", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("nextval('\"BusinessDayId_seq\"')");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BusinessDay");
                });

            modelBuilder.Entity("hotel_system_backend.Models.DeletedTransactions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("nextval('\"DeletedTransactionId_seq\"')");

                    b.Property<long>("BusinessDayId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ExactDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessDayId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("DeletedTransactions");
                });

            modelBuilder.Entity("hotel_system_backend.Models.Guest", b =>
                {
                    b.Property<long>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("nextval('\"GuestId_seq\"')");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ReservationNumber")
                        .HasColumnType("bigint");

                    b.HasKey("GuestId");

                    b.HasIndex("ReservationNumber");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("hotel_system_backend.Models.Record", b =>
                {
                    b.Property<long>("RecordNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("nextval('\"RecordNumber_seq\"')");

                    b.Property<DateTime>("DateTimeOfRecord")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("RecordNumber");

                    b.HasIndex("UserId");

                    b.ToTable("Record");
                });

            modelBuilder.Entity("hotel_system_backend.Models.Reservation", b =>
                {
                    b.Property<long>("ReservationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("nextval('\"ReservationNumber_seq\"')");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MealPlan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Pax")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("ReservedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("StatusMessage")
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("countOfRoomsReserved")
                        .HasColumnType("integer");

                    b.HasKey("ReservationNumber");

                    b.HasIndex("UserId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("hotel_system_backend.Models.Room", b =>
                {
                    b.Property<string>("RoomNumber")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ReservationNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isDirty")
                        .HasColumnType("boolean");

                    b.Property<bool>("isOccupied")
                        .HasColumnType("boolean");

                    b.Property<bool>("isOutOfOrder")
                        .HasColumnType("boolean");

                    b.Property<bool>("isReserved")
                        .HasColumnType("boolean");

                    b.HasKey("RoomNumber");

                    b.HasIndex("ReservationNumber");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("hotel_system_backend.Models.Transactions", b =>
                {
                    b.Property<long>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("nextval('\"TransactionId_seq\"')");

                    b.Property<long>("BusinessDayId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreditOrDebit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ExactDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ReservationNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("TransactionId");

                    b.HasIndex("BusinessDayId");

                    b.HasIndex("ReservationNumber");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("hotel_system_backend.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("nextval('\"UserID_seq\"')");

                    b.Property<string[]>("Authorities")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("hotel_system_backend.Models.DeletedTransactions", b =>
                {
                    b.HasOne("hotel_system_backend.Models.BusinessDay", "BusinessDay")
                        .WithMany()
                        .HasForeignKey("BusinessDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hotel_system_backend.Models.Transactions", "Transactions")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hotel_system_backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessDay");

                    b.Navigation("Transactions");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hotel_system_backend.Models.Guest", b =>
                {
                    b.HasOne("hotel_system_backend.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("hotel_system_backend.Models.Record", b =>
                {
                    b.HasOne("hotel_system_backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("hotel_system_backend.Models.Reservation", b =>
                {
                    b.HasOne("hotel_system_backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hotel_system_backend.Models.Room", b =>
                {
                    b.HasOne("hotel_system_backend.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("hotel_system_backend.Models.Transactions", b =>
                {
                    b.HasOne("hotel_system_backend.Models.BusinessDay", "BusinessDay")
                        .WithMany()
                        .HasForeignKey("BusinessDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hotel_system_backend.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hotel_system_backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessDay");

                    b.Navigation("Reservation");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
